{"version":3,"sources":["../../../src/renderer/components/prefixList.js"],"names":["PrefixList","style","margin","props","letter","actions","getLetterList","map","l","selectPrefixLetter","getFirstPrefixByLetter","labelStyle","prefix","getPrefixByLetter","p","selectPrefix","padding","getPrefixDetail","detail","chinese_meaning","getPrefixList","propTypes","string","isRequired","object"],"mappings":";;;;;;;;AAGA;;;;AAEA;;;;AACA;;;;AACA;;;;AACA;;;;AAEA;;;;;;;;;;+eAVA;;;;;IAYqBA,U;;;;;;;;;;;wCAOD;AACZ,gBAAIC,QAAQ,EAACC,QAAQ,EAAT,EAAZ;AADY,yBAEc,KAAKC,KAFnB;AAAA,gBAELC,MAFK,UAELA,MAFK;AAAA,gBAEGC,OAFH,UAEGA,OAFH;;AAGZ,mBAAO,qBAAWC,aAAX,GAA2BC,GAA3B,CAA+B;AAAA,uBAClC,wDAAc,KAAKC,CAAnB,EAAsB,OAAOA,CAA7B,EAAgC,OAAOP,KAAvC,EAA8C,SAASG,WAAWI,CAAlE;AACc,6BAAS;AAAA,+BAAIH,QAAQI,kBAAR,CAA2BD,CAA3B,CAAJ;AAAA,qBADvB,GADkC;AAAA,aAA/B,CAAP;AAIH;;;+CAEsBJ,M,EAAQ;AAC3B,mBAAO,qBAAWM,sBAAX,CAAkCN,MAAlC,CAAP;AACH;;;sCAEaA,M,EAAQ;AAClB,gBAAIH,QAAQ,EAACC,QAAQ,EAAT,EAAZ;AACA,gBAAIS,aAAa,EAAC,iBAAiB,WAAlB,EAAjB;AAFkB,0BAGQ,KAAKR,KAHb;AAAA,gBAGXS,MAHW,WAGXA,MAHW;AAAA,gBAGHP,OAHG,WAGHA,OAHG;;AAIlB,mBAAO,qBAAWQ,iBAAX,CAA6BT,MAA7B,EAAqCG,GAArC,CAAyC;AAAA,uBAC5C,sDAAY,KAAKO,CAAjB,EAAoB,OAAOA,CAA3B,EAA8B,OAAOb,KAArC,EAA4C,SAASW,WAAWE,CAAhE;AACY,gCAAYH,UADxB;AAEY,6BAAS;AAAA,+BAAIN,QAAQU,YAAR,CAAqBD,CAArB,CAAJ;AAAA,qBAFrB,GAD4C;AAAA,aAAzC,CAAP;AAKH;;;wCAEeV,M,EAAQQ,M,EAAQ;AAC5B,gBAAMX,QAAQ;AACVC,wBAAQ,EADE;AAEVc,yBAAS;AAFC,aAAd;AAIA,mBAAO,qBAAWC,eAAX,CAA2Bb,MAA3B,EAAmCQ,MAAnC,EAA2CL,GAA3C,CAA+C;AAAA,uBAClD;AAAA;AAAA,sBAAO,KAAKK,MAAZ,EAAoB,OAAOX,KAA3B,EAAkC,QAAQ,CAA1C;AACI;AAAA;AAAA;AAAMiB,+BAAOC;AAAb;AADJ,iBADkD;AAAA,aAA/C,CAAP;AAKH;;;iCAEQ;AACL,mBACI;AAAA;AAAA;AACI;AAAA;AAAA;AACK,yBAAKb,aAAL;AADL,iBADJ;AAII,sEAJJ;AAKI;AAAA;AAAA;AACK,yBAAKc,aAAL,CAAmB,KAAKjB,KAAL,CAAWC,MAA9B;AADL,iBALJ;AAQI;AAAA;AAAA;AACK,yBAAKa,eAAL,CAAqB,KAAKd,KAAL,CAAWC,MAAhC,EAAwC,KAAKD,KAAL,CAAWC,MAAnD;AADL;AARJ,aADJ;AAcH;;;;;;AA1DgBJ,U,CACVqB,S,GAAY;AACfjB,YAAQ,iBAAUkB,MAAV,CAAiBC,UADV;AAEfX,YAAQ,iBAAUU,MAAV,CAAiBC,UAFV;AAGflB,aAAS,iBAAUmB,MAAV,CAAiBD;AAHX,C;kBADFvB,U;AA2DpB","file":"prefixList.js","sourcesContent":["/**\n * Created by peter on 10/27/16.\n */\nimport React, {Component, PropTypes} from 'react';\n\nimport RaisedButton from 'material-ui/RaisedButton';\nimport FlatButton from 'material-ui/FlatButton';\nimport Divider from 'material-ui/Divider';\nimport Paper from 'material-ui/Paper';\n\nimport PrefixData from './prefixData';\n\nexport default class PrefixList extends Component {\n    static propTypes = {\n        letter: PropTypes.string.isRequired,\n        prefix: PropTypes.string.isRequired,\n        actions: PropTypes.object.isRequired,\n    };\n\n    getLetterList() {\n        var style = {margin: 12};\n        const {letter, actions} = this.props;\n        return PrefixData.getLetterList().map(l =>\n            <RaisedButton key={l} label={l} style={style} primary={letter === l}\n                          onClick={()=>actions.selectPrefixLetter(l)}/>\n        );\n    }\n\n    getFirstPrefixByLetter(letter) {\n        return PrefixData.getFirstPrefixByLetter(letter);\n    }\n\n    getPrefixList(letter) {\n        var style = {margin: 12};\n        var labelStyle = {\"textTransform\": \"lowercase\"};\n        const {prefix, actions} = this.props;\n        return PrefixData.getPrefixByLetter(letter).map(p =>\n            <FlatButton key={p} label={p} style={style} primary={prefix === p}\n                        labelStyle={labelStyle}\n                        onClick={()=>actions.selectPrefix(p)}/>\n        );\n    }\n\n    getPrefixDetail(letter, prefix) {\n        const style = {\n            margin: 20,\n            padding: 20,\n        };\n        return PrefixData.getPrefixDetail(letter, prefix).map(detail =>\n            <Paper key={prefix} style={style} zDepth={2}>\n                <div>{detail.chinese_meaning}</div>\n            </Paper>\n        );\n    }\n\n    render() {\n        return (\n            <div>\n                <div>\n                    {this.getLetterList()}\n                </div>\n                <Divider />\n                <div>\n                    {this.getPrefixList(this.props.letter)}\n                </div>\n                <div>\n                    {this.getPrefixDetail(this.props.letter, this.props.letter)}\n                </div>\n            </div>\n        );\n    }\n};\n\n"]}