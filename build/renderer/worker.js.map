{"version":3,"sources":["../../src/renderer/worker.js"],"names":["Promise","require","window","$","jQuery","jquery","FILES_PATH","ipcRenderer","marked","remote","BrowserWindow","statAsync","promisify","stat","writeFileAsync","writeFile","_renderHtml","markdown","markedRenderer","renderer","_renderPdf","html","filename","opts","marginsType","printBackground","printSelectionOnly","pageSize","landscape","win","width","height","show","loadURL","resolve","__dirname","on","webContents","executeJavaScript","setTimeout","printToPDF","err","data","destroy","dispatchHandlers","log","fileId","send","type","tmpData","that","find","_id","docs","length","content","mdLocalImageOut","importFile","selectedFile","files","console","file","ipcRender","dispatch","action","args","init","e","basename","split","dirname","index","pp","ppp","m","result","exec","matchTxt","text","href","test","originPath","stats","isFile","replace"],"mappings":"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","file":"worker.js","sourcesContent":["var Promise = require('bluebird');\nwindow.$ = window.jQuery = window.jquery = require('jquery');\nimport co from 'co';\nrequire('babel-polyfill');\nimport constants from '../constants';\nlet { FILES_PATH } = constants;\nconst ipcRenderer = require('electron').ipcRenderer;\nimport {\n    files,\n    books,\n    tags,\n    infos\n} from '../main/set_db';\nimport fs from 'fs';\nimport path from 'path';\nimport { copyFile } from '../util'\nimport renderFactory from '../render_factory'\nconst marked = require('marked');\nconst {remote} = require('electron')\nconst BrowserWindow = remote.BrowserWindow;\nconst statAsync = Promise.promisify(fs.stat);\nconst writeFileAsync = Promise.promisify(fs.writeFile);\n\n\nfunction _renderHtml(markdown) {\n  let markedRenderer = renderFactory({});\n  return marked(markdown, {\n    renderer: markedRenderer\n  });\n}\n\nfunction _renderPdf(html, filename) {\n  var opts = {\n    marginsType: 0,\n    printBackground: true,\n    printSelectionOnly: false,\n    pageSize: 'A4',\n    landscape: false\n  }\n  var win = new BrowserWindow({ width:0, height: 0, show: false })\n  win.loadURL(`file://${path.resolve(__dirname, '../../static/html_to_pdf.html')}`, {});\n  win.on('closed', function () { win = null });\n  win.webContents.on('dom-ready', function() {\n    win.webContents.executeJavaScript(`\n      var $marked = $('#marked');\n      $('#marked').html(\\`${html}\\`);\n    `);\n    setTimeout(function(){\n      win.webContents.printToPDF(opts, function (err, data) {\n        if (err) {\n          return;\n        }\n        fs.writeFile(filename, data, function (err) {\n          if (err) {\n            return;\n          }\n          win.destroy();\n        })\n      })\n    }, 200);\n  })\n}\n\nvar dispatchHandlers = {\n  'testHandler': function(...args){\n    console.log(...args);\n  },\n  // 把笔记到处存为markdown\n  'saveNoteAsMarkdown': function(fileId){\n    ipcRenderer.send('saveDialog', 'export a note', 'md', {fileId: fileId, type: 'saveNoteAsMarkdown'});\n  },\n  'saveNoteAsPdf': function(fileId){\n    ipcRenderer.send('saveDialog', 'export a note', 'pdf', {fileId: fileId, type: 'saveNoteAsPdf'});\n  },\n  // main process save的callback\n  'fileSaved': function(filename, tmpData) {\n    var that = this;\n    switch (tmpData.type) {\n      case 'saveNoteAsMarkdown':\n        files.find({_id: tmpData.fileId}, function(err, docs) {\n          if(err || docs.length == 0)\n            return;\n          let content = docs[0].content;\n          co(function * () {\n            if(content.length > 0)\n              content = yield mdLocalImageOut(filename, content);\n            yield writeFileAsync(filename, content);\n          });\n        });\n        break;\n        return;\n      case 'saveNoteAsPdf':\n        files.find({_id: tmpData.fileId}, function(err, docs) {\n          if(err || docs.length == 0)\n            return;\n          let content = docs[0].content;\n          let html = _renderHtml(content);\n          _renderPdf(html, filename);\n        });\n        break;\n        return;\n      default:\n        return;\n    }\n  },\n  // 导入markdown or html\n  importFile: function() {\n    ipcRenderer.send('openFile', {type: \"importFile\"});\n  },\n  // 选择文件的callback\n  selectedFile: function(files, tmpData) {\n    console.log(files);\n    console.log(tmpData);\n    let file = files[0];\n    switch (tmpData.type) {\n      case \"importFile\":\n        console.log('xxxxx');\n        return;\n        break;\n      default:\n\n    }\n  }\n};\n\nconst ipcRender = require('electron').ipcRenderer;\n\nfunction dispatch(action, ...args) {\n  if(dispatchHandlers[action])\n    dispatchHandlers[action](...args);\n}\n\nfunction init() {\n  ipcRender.on('dispatch', (e, ...args) => {\n    dispatch(...args);\n  });\n}\n\n// 调用方法前确定有content\nfunction mdLocalImageOut (filename, content) {\n  content = content || '';\n  let basename = path.basename(filename).split('.')[0];\n  let dirname = path.dirname(filename);\n  let index = 0;\n  let pp = /!\\[(.*?)\\]\\((.*?)\\)/i;\n  let ppp = /[http|https]/;\n  let m;\n  let result = content;\n  return  co(function * () {\n            do {\n                m = pp.exec(content);\n                if (m) {\n                  let matchTxt = m[0];\n                  let text = m[1];\n                  let href = m[2];\n                  if(!ppp.test(href)){\n                    let originPath = path.resolve(FILES_PATH, href);\n                    let stats = yield statAsync(originPath);\n                    if(stats.isFile()){\n                      yield copyFile(originPath, path.resolve(dirname, `./${basename}_images/${index}`))\n                      result = result.replace(matchTxt, `![${text}](./${basename}_images/${index})`);\n                      content = content.replace(matchTxt, '');\n                      index = index + 1;\n                    }\n                  }\n                }\n            } while (m);\n            return result;\n          });\n}\n\ninit();\n"]}