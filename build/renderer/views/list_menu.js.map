{"version":3,"sources":["../../../src/renderer/views/list_menu.js"],"names":["style","display","margin","ListMenu","props","borderStyle","dataItem","id","state","checkedId","newProps","setState","event","console","log","actions","cancelString","onCancel","okString","onOk","tmpData","title","open","dataList","map","index","filterFunc","name","border","selectDataItem","propTypes","string","func","bool","array","oneOfType","number","object"],"mappings":";;;;;;;;AAAA;;;;AAIA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;AACA;;;;;;;;;;;;AAEA,IAAMA,QAAQ;AACZC,WAAS,cADG;AAEZC,UAAQ;AAFI,CAAd;;IAKqBC,Q;;;AACnB,oBAAYC,KAAZ,EAAmB;AAAA;;AAAA,oHACTA,KADS;;AAAA,UAqBnBC,WArBmB,GAqBL,UAACC,QAAD,EAAc;AAC1B,UAAGA,SAASC,EAAT,IAAe,MAAKC,KAAL,CAAWC,SAA7B,EAAwC;AACtC,eAAO,qBAAP;AACD,OAFD,MAEK;AACH,eAAO,MAAP;AACD;AACF,KA3BkB;;AAEf,UAAKD,KAAL,GAAa;AACXC,iBAAW;AADA,KAAb;AAFe;AAKlB;;;;8CAEyBC,Q,EAAU;AAClC,WAAKC,QAAL,CAAc;AACZF,mBAAW;AADC,OAAd;AAGD;;;mCAEcG,K,EAAOH,S,EAAW;AAC/BI,cAAQC,GAAR,CAAY,gBAAZ;AACAD,cAAQC,GAAR,CAAYL,SAAZ;AACA,WAAKE,QAAL,CAAc;AACZF,mBAAWA;AADC,OAAd;AAGD;;;6BAUS;AAAA;;AACR,UAAMM,UAAU,CACd;AACE,iBAAS,IADX;AAEE,eAAO,KAAKX,KAAL,CAAWY,YAFpB;AAGE,oBAAY,KAAKZ,KAAL,CAAWa;AAHzB,QADc,EAMd;AACE,eAAO,KAAKb,KAAL,CAAWc,QADpB;AAEE,oBAAY,oBAACN,KAAD,EAAW;AAAE,iBAAKR,KAAL,CAAWe,IAAX,CAAgBP,KAAhB,EAAuB,OAAKJ,KAAL,CAAWC,SAAlC,EAA6C,OAAKL,KAAL,CAAWgB,OAAxD;AAAmE,SAF9F;AAGE,kBAAU,KAAKZ,KAAL,CAAWC,SAAX,IAAsB;AAHlC,QANc,CAAhB;;AAaA,aACE;AAAA;AAAA;AACE;AAAA;AAAA;AACE,mBAAO,KAAKL,KAAL,CAAWiB,KADpB;AAEE,qBAASN,OAFX;AAGE,mBAAO,IAHT;AAIE,kBAAM,KAAKX,KAAL,CAAWkB,IAJnB;AAKE,mCAAuB;AALzB;AAOE;AAAA;AAAA;AAEI,iBAAKlB,KAAL,CAAWmB,QAAX,CAAoBC,GAApB,CAAwB,UAAClB,QAAD,EAAWmB,KAAX,EAAqB;AAC3C,qBACE,OAAKrB,KAAL,CAAWsB,UAAX,CAAsBpB,QAAtB,EAAgC,OAAKF,KAAL,CAAWE,QAA3C,IACE;AACE,qBAAKA,SAASC,EADhB;AAEE,6BAAaD,SAASqB,IAFxB;AAGE,0BAAU;AAHZ,gBADF,GAME;AACE,uBAAO;AACLC,0BAAQ,OAAKvB,WAAL,CAAiBC,QAAjB;AADH,iBADT;AAIE,qBAAKA,SAASC,EAJhB;AAKE,6BAAaD,SAASqB,IALxB;AAME,+BAAe,IANjB;AAOE,4BAAY,oBAACf,KAAD,EAAW;AAAE,yBAAKiB,cAAL,CAAoBjB,KAApB,EAA2BN,SAASC,EAApC;AAAyC;AAPpE,gBAPJ;AAiBD,aAlBD;AAFJ;AAPF;AADF,OADF;AAmCD;;;;;;kBA/EkBJ,Q;;;AAkFrBA,SAAS2B,SAAT,GAAqB;AACnBd,gBAAc,iBAAUe,MADL;AAEnBb,YAAU,iBAAUa,MAFD;AAGnBd,YAAU,iBAAUe,IAHD;AAInBb,QAAM,iBAAUa,IAJG;AAKnBX,SAAO,iBAAUU,MALE;AAMnBT,QAAM,iBAAUW,IANG;AAOnBV,YAAU,iBAAUW,KAPD;AAQnB5B,YAAU,iBAAU6B,SAAV,CAAoB,CAAC,iBAAUJ,MAAX,EAAmB,iBAAUK,MAA7B,EAAqC,iBAAUC,MAA/C,CAApB,CARS;AASnBX,cAAY,iBAAUM;AATH,CAArB","file":"list_menu.js","sourcesContent":["import React, {\n  Component,\n  PropTypes\n} from 'react';\nimport FlatButton from 'material-ui/FlatButton';\nimport Paper from 'material-ui/Paper';\nimport Dialog from 'material-ui/Dialog';\nimport Menu from 'material-ui/Menu';\nimport MenuItem from 'material-ui/MenuItem';\nimport Divider from 'material-ui/Divider';\nimport ArrowDropRight from 'material-ui/svg-icons/navigation-arrow-drop-right';\nimport {List, ListItem} from 'material-ui/List';\nimport DoneIcon from 'material-ui/svg-icons/action/done';\n\nconst style = {\n  display: 'inline-block',\n  margin: '16px 32px 16px 0',\n};\n\nexport default class ListMenu extends Component {\n  constructor(props) {\n      super(props);\n      this.state = {\n        checkedId: null\n      }\n  }\n\n  componentWillReceiveProps(newProps) {\n    this.setState({\n      checkedId: null\n    });\n  }\n\n  selectDataItem(event, checkedId) {\n    console.log('selectDataItem');\n    console.log(checkedId);\n    this.setState({\n      checkedId: checkedId\n    });\n  }\n\n  borderStyle = (dataItem) => {\n    if(dataItem.id == this.state.checkedId) {\n      return '1.5px #d1c091 solid';\n    }else{\n      return 'none';\n    }\n  }\n\n  render () {\n    const actions = [\n      <FlatButton\n        primary={true}\n        label={this.props.cancelString}\n        onTouchTap={this.props.onCancel}\n      />,\n      <FlatButton\n        label={this.props.okString}\n        onTouchTap={(event) => { this.props.onOk(event, this.state.checkedId, this.props.tmpData); }}\n        disabled={this.state.checkedId==null}\n      />\n    ];\n\n    return (\n      <div>\n        <Dialog\n          title={this.props.title}\n          actions={actions}\n          modal={true}\n          open={this.props.open}\n          autoScrollBodyContent={true}\n        >\n          <List>\n            {\n              this.props.dataList.map((dataItem, index) => {\n                return (\n                  this.props.filterFunc(dataItem, this.props.dataItem) ?\n                    <ListItem\n                      key={dataItem.id}\n                      primaryText={dataItem.name}\n                      leftIcon={<DoneIcon/>}\n                    /> :\n                    <ListItem\n                      style={{\n                        border: this.borderStyle(dataItem)\n                      }}\n                      key={dataItem.id}\n                      primaryText={dataItem.name}\n                      insetChildren={true}\n                      onTouchTap={(event) => { this.selectDataItem(event, dataItem.id) }}\n                    />\n                )\n              })\n            }\n          </List>\n        </Dialog>\n      </div>\n    );\n  }\n}\n\nListMenu.propTypes = {\n  cancelString: PropTypes.string,\n  okString: PropTypes.string,\n  onCancel: PropTypes.func,\n  onOk: PropTypes.func,\n  title: PropTypes.string,\n  open: PropTypes.bool,\n  dataList: PropTypes.array,\n  dataItem: PropTypes.oneOfType([PropTypes.string, PropTypes.number, PropTypes.object]),\n  filterFunc: PropTypes.func\n}\n"]}