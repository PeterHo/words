{"version":3,"sources":["../../../src/renderer/views/books_container.js"],"names":["mapStateToProps","state","books","currentBook","activeBook","globalBook","mapDispatchToProps","dispatch","addBook","book","listBooks","delBook","editBook","setGlobalBook","BooksContainer","props","bookDialogOpen","booksSearchText","confirmationOpen","confirmString","confirmationTmpData","debouncedChangeBooksSearchText","changeBooksSearchText","that","find","sort","exec","err","bks","length","tmpC","forEach","bk","index","count","bookId","_id","available","error","Error","filesCount","availableBooks","filter","name","send","_checkNewNoteBookParam","newProps","cancel","nextProps","nextState","onNormalContextMenu","height","width","position","bottom","right","zIndex","_newBook","marginLeft","event","persist","patt","RegExp","test","jumpToNotes","onContextMenu","closeBookFormDialog","submitBookFormDialog","onCancelConfirmationDialog","onOkConfirmationDialog","location","query","newNoteBook","_delNewNoteBookParam","replace","pathname","imagePath","setState","insert","_bookAttributes","newBook","Object","assign","update","target","value","obj","push","tmpData","$set","multi","deleteBook","preventDefault","stopPropagation","unavailableBooks"],"mappings":"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","file":"books_container.js","sourcesContent":["import React, {\n    Component\n} from 'react';\nimport shallowCompare from 'react-addons-shallow-compare';\nimport {\n    connect\n} from 'react-redux';\nimport {\n    addBook,\n    listBooks,\n    delBook,\n    editBook,\n    concatBooks,\n    activeBook,\n    setGlobalBook\n} from '../actions';\nimport {\n    files,\n    books,\n    tags,\n    infos\n} from '../../main/set_db';\nimport BooksList from './books_list';\nimport BookForm from './book_form';\nimport FloatingActionButton from 'material-ui/FloatingActionButton';\nimport ContentAdd from 'material-ui/svg-icons/content/add';\nimport DropZone from 'react-dropzone';\nimport TextField from 'material-ui/TextField';\nimport {\n    debounce,\n    pick\n} from '../../util';\nimport {\n    hashHistory\n} from 'react-router';\nimport ConfirmDialog from './confirm_dialog';\nimport {\n  openBookItemContextMenu,\n  openNormalContextMenu\n} from '../controllers/books_controller.js';\nimport {\n  ipcRenderer\n} from 'electron';\n\nconst mapStateToProps = (state) => {\n  return {\n    books: state.books,\n    currentBook: state.activeBook,\n    globalBook: state.globalBook\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    addBook: (book) => {\n      dispatch(addBook(book));\n    },\n    listBooks: (books) => {\n      dispatch(listBooks(books));\n    },\n    delBook: (book) => {\n      dispatch(delBook(book));\n    },\n    editBook: (book) => {\n      dispatch(editBook(book));\n    },\n    activeBook: (book) => {\n      dispatch(activeBook(book));\n    },\n    setGlobalBook: (book) => {\n      dispatch(setGlobalBook(book));\n    }\n  }\n}\n\nclass BooksContainer extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      editBook: {},\n      bookDialogOpen: false,\n      booksSearchText: null,\n      // for custom confirm dialog\n      confirmationOpen: false,\n      confirmString: '',\n      confirmationTmpData: {}\n    }\n    this.debouncedChangeBooksSearchText = debounce(this.changeBooksSearchText, 200);\n  }\n  // hook method for fetch books\n  componentDidMount() {\n    // can write some fetch infos code\n    let that = this;\n    books.find({  }).sort({ 'updatedAt': -1 }).exec((err, bks) => {\n      if(bks.length == 0)\n        that.props.listBooks(bks);\n      let tmpC = 0;\n      bks.forEach((bk, index) => {\n        files.count({bookId: bk._id, available: true}, (error, count) => {\n          if(error){\n            throw new Error('db error');\n            return;\n          }\n          bk.filesCount = count;\n          tmpC += 1;\n          if(tmpC == bks.length)\n            that.props.listBooks(bks);\n        })\n        let availableBooks = bks.filter((book) => {\n          return book.available;\n        });\n        if(!that.props.globalBook._id && availableBooks.length > 0){\n          that.props.setGlobalBook(\n            {\n              _id: availableBooks[0]._id,\n              name: availableBooks[0].name\n            }\n          );\n        }\n      });\n    });\n    ipcRenderer.send('onNotebookContainer');\n    this._checkNewNoteBookParam();\n  }\n\n  componentWillReceiveProps(newProps) {\n    this._checkNewNoteBookParam(newProps);\n  }\n\n  _checkNewNoteBookParam = (props) => {\n    props = props || this.props;\n    if(props.location.query.newNoteBook == 'true'){\n      // 保证只开一次新建的dialog\n      this._delNewNoteBookParam();\n      this._newBook();\n    }\n  }\n\n  _delNewNoteBookParam = () => {\n    hashHistory.replace({\n      pathname: '/'\n    });\n  }\n\n  componentWillUnmount() {\n    this.debouncedChangeBooksSearchText.cancel();\n  }\n\n  _newBook = (event) => {\n    this.props.activeBook({ imagePath: '', available: true });\n    this.setState({\n      bookDialogOpen: true\n    });\n  }\n\n  editBook = (book) => {\n    this.props.activeBook(book);\n    this.setState({\n      bookDialogOpen: true\n    });\n  }\n\n  closeBookFormDialog = () => {\n    this.setState({\n      bookDialogOpen: false\n    });\n  }\n\n  submitBookFormDialog = (book) => {\n    var that = this;\n    if(!book._id){\n      books.insert(that._bookAttributes(book), (error, newBook) => {\n        if(error){\n          throw error;\n          return;\n        }\n        that.props.addBook(Object.assign({}, newBook, {filesCount: 0}));\n        that.setState({\n          bookDialogOpen: false\n        });\n        if(!that.props.globalBook._id){\n          that.props.setGlobalBook(\n            {\n              _id: newBook._id,\n              name: newBook.name\n            }\n          );\n        }\n      });\n    }else{\n      books.update({'_id': book._id}, that._bookAttributes(book), {}, (error) => {\n        if(error){\n          throw error;\n          return;\n        }\n        that.props.editBook(book);\n        that.setState({\n          bookDialogOpen: false\n        });\n      });\n    }\n  }\n\n  _bookAttributes = (book) => {\n    return pick(book, 'imagePath', 'available', 'name');\n  }\n\n  changeBooksSearchText = (event)=> {\n    this.setState({\n      booksSearchText: event.target.value\n    });\n  }\n\n  shouldComponentUpdate (nextProps, nextState) {\n    return shallowCompare(this, nextProps, nextState);\n  }\n\n  jumpToNotes = (obj) => {\n    hashHistory.push(obj);\n  }\n\n  delBook = (book) => {\n    this.setState({\n      confirmationOpen: true,\n      confirmString: `Are you sure you want to delete the notebook '${book.name}' all notes to trash`,\n      confirmationTmpData: {bookId: book._id, book: book}\n    });\n  }\n\n  onCancelConfirmationDialog = () => {\n    this.setState({\n      confirmationOpen: false\n    });\n  }\n\n  onOkConfirmationDialog = (event, tmpData) => {\n    let that = this;\n    books.update({_id: tmpData.bookId}, {$set: {available: false}}, {}, function(error) {\n      if(error){\n        throw error;\n        return;\n      }\n      that.props.editBook(Object.assign({}, tmpData.book, {available: false}));\n      if(that.props.globalBook._id == tmpData.bookId) {\n        that.props.setGlobalBook({});\n      }\n      files.update({ bookId: tmpData.bookId }, { $set: { available: false } }, { multi: true }, (error) => {\n        if(error){\n          throw error;\n          return;\n        }\n        that.setState({\n          confirmationOpen: false\n        });\n      });\n    });\n  }\n\n  onContextMenu = (event, book) => {\n    var that = this;\n    openBookItemContextMenu({\n      editBook: () => {\n        that.editBook(book);\n      },\n      deleteBook: () => {\n        that.delBook(book);\n      },\n      newBook: () => {\n        that._newBook();\n      }\n    });\n  }\n\n  onNormalContextMenu = (event) => {\n    event.preventDefault();\n    event.stopPropagation();\n    var that = this;\n    openNormalContextMenu({\n      newBook: () => {\n        that._newBook();\n      }\n    });\n  }\n\n  availableBooks = () => {\n    return this.props.books.filter((book) => {\n      return book.available;\n    });\n  }\n\n  unavailableBooks = () => {\n    return this.props.books.filter((book) => {\n      return !book.available;\n    });\n  }\n\n  render() {\n    return (\n      <div\n        onContextMenu={this.onNormalContextMenu}\n        style={{\n          height: '100%',\n          width: '100%'\n        }}\n      >\n        <FloatingActionButton style={{ position: 'fixed', bottom: '10px', right: '10px', zIndex: 1000 }} onClick={this._newBook}>\n          <ContentAdd />\n        </FloatingActionButton>\n        <div>\n          <TextField\n            hintText=\"Search a notebook\"\n            style={{ marginLeft: '10px' }}\n            defaultValue={this.state.booksSearchText}\n            onChange={(event) => {event.persist();this.debouncedChangeBooksSearchText(event)}}\n            />\n        </div>\n        <BooksList\n          books={this.availableBooks().filter((book) =>  {\n            if(!this.state.booksSearchText || this.state.booksSearchText == '')\n              return true;\n              let patt = new RegExp(this.state.booksSearchText, 'i');\n              return patt.test(book.name);\n          })}\n          callbacks={{\n            editBook: this.editBook,\n            delBook: this.delBook,\n            jumpToNotes: this.jumpToNotes,\n            onContextMenu: this.onContextMenu\n          }}\n        />\n        <BookForm\n          book={this.props.currentBook}\n          open={this.state.bookDialogOpen}\n          onCancel={this.closeBookFormDialog}\n          onOk={this.submitBookFormDialog}\n        />\n        <ConfirmDialog\n          cancelString='Cancel'\n          okString='Delete'\n          onCancel={this.onCancelConfirmationDialog}\n          onOk={this.onOkConfirmationDialog}\n          title= ''\n          open={this.state.confirmationOpen}\n          confirmString={this.state.confirmString}\n          tmpData={this.state.confirmationTmpData}\n        />\n      </div>\n    );\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(BooksContainer);\n"]}