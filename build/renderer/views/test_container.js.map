{"version":3,"sources":["../../../src/renderer/views/test_container.js"],"names":["require","remote","Menu","MenuItem","BrowserWindow","path","ipcRender","ipcRenderer","webContents","menu","append","label","click","console","log","type","checked","TestContainer","props","contextMunuHandler","popup","getCurrentWindow","windowClick","modalPath","join","__dirname","win","width","height","on","loadURL","show","opts","marginsType","printBackground","printSelectionOnly","pageSize","landscape","printToPDF","err","data","writeFile","resolve","error","testIpc","send","hh","testPdf","getFocusedWebContents","toggleWatching","setState","editorState","state","oldState","togglePreview","backgroundColor"],"mappings":"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","file":"test_container.js","sourcesContent":["import React, {\n    Component\n} from 'react';\nimport ANoteEditor from './anote_editor';\nimport fs from 'fs';\nconst {remote} = require('electron')\nconst {Menu, MenuItem} = remote\nconst BrowserWindow = remote.BrowserWindow\nconst path = require('path')\nconst ipcRender = require('electron').ipcRenderer\nconst webContents = remote.webContents;\n\nconst menu = new Menu()\nmenu.append(new MenuItem({label: 'MenuItem1', click() { console.log('item 1 clicked') }}))\nmenu.append(new MenuItem({type: 'separator'}))\nmenu.append(new MenuItem({label: 'MenuItem2', type: 'checkbox', checked: true}))\n\nexport default class TestContainer extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      editorState: 1,\n      oldState: null\n    }\n  }\n\n  // context menu handler\n  contextMunuHandler = () => {\n    menu.popup(remote.getCurrentWindow())\n  }\n\n  // open new window\n  windowClick = () => {\n    const modalPath = path.join('file://', __dirname, '../../../static/test.html')\n    let win = new BrowserWindow({ width: 400, height: 320 })\n    win.on('close', function () { win = null })\n    win.loadURL(modalPath)\n    win.show()\n    var opts = {\n      marginsType: 0,\n      printBackground: true,\n      printSelectionOnly: false,\n      pageSize: 'A4',\n      landscape: false\n    }\n    win.webContents.on('did-finish-load', function() {\n      win.webContents.printToPDF(opts, function(err, data) {\n        if(err)\n          console.log(err);\n        fs.writeFile(path.resolve(__dirname, '../../../testpdf.pdf'), data, function (err) {\n          if (err) {\n            console.error(err)\n          }\n          console.log('success!!!');\n        })\n      })\n    });\n  }\n\n  testIpc = () => {\n    // 函数是传不过去的\n    ipcRender.send('ipcTestMain', {hh: 'hh'});\n  }\n\n  // electron printToPDF, so cool!!!!!!\n  testPdf = () => {\n    var opts = {\n      marginsType: 0,\n      printBackground: true,\n      printSelectionOnly: false,\n      pageSize: 'A4',\n      landscape: false\n    }\n    webContents.getFocusedWebContents().printToPDF(opts, function(err, data) {\n      if(err)\n        console.log(err);\n      fs.writeFile(path.resolve(__dirname, '../../../testpdf.pdf'), data, function (err) {\n        if (err) {\n          console.error(err)\n        }\n        console.log('success!!!');\n      })\n    })\n  }\n\n  toggleWatching = () => {\n    this.setState({\n      editorState: this.state.editorState == 1 ? 0 : 1,\n      oldState: this.state.editorState == 1 ? 0 : 1\n    });\n  }\n\n  togglePreview = () => {\n    this.setState({\n      editorState: this.state.editorState == 2 ? this.state.oldState || 0 : 2\n    });\n  }\n\n  render() {\n    return (\n      <div>\n        <div\n          onContextMenu={this.contextMunuHandler}\n          style={{\n            height: '100px',\n            backgroundColor: '#fae'\n          }}\n        >right menu</div>\n        <div\n          style={{\n            height: '100px',\n            backgroundColor: '#efa'\n          }}\n          onClick={this.windowClick}\n        >open window</div>\n        <div\n          style={{\n            height: '400px',\n            backgroundColor: '#eef'\n          }}\n          onClick={this.testIpc}\n        >test Ipc</div>\n        <div\n          style={{\n            height: '500px'\n          }}\n        ><ANoteEditor\n          defaultValue='### h'\n          editorState={this.state.editorState}\n          toggleWatching={this.toggleWatching}\n          togglePreview={this.togglePreview}\n        /></div>\n        <div\n          onClick={this.testPdf}\n        >test5</div>\n      </div>\n    );\n  }\n}\n"]}