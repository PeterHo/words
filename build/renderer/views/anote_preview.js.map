{"version":3,"sources":["../../../src/renderer/views/anote_preview.js"],"names":["marked","require","defaultStyle","backgroundColor","overflowY","ANotePreview","props","renderMarkdown","__html","value","renderer","markedRenderer","setSize","width","height","newStyle","style","Object","assign","state","setState","rendererOptions","propTypes","string","object"],"mappings":";;;;;;;;AAAA;;;;AAKA;;;;;;;;;;;;AADA,IAAMA,SAASC,QAAQ,QAAR,CAAf;;;AAGA,IAAMC,eAAe;AACnBC,mBAAiB,MADE;AAEnBC,aAAW;AAFQ,CAArB;;IAKMC,Y;;;AACJ,wBAAYC,KAAZ,EAAmB;AAAA;;AAAA,4HACXA,KADW;;AAAA,UAQnBC,cARmB,GAQF,YAAM;AACrB,aAAO;AACLC,gBAAQR,OAAO,MAAKM,KAAL,CAAWG,KAAX,IAAoB,EAA3B,EAA+B;AACrCC,oBAAU,MAAKC;AADsB,SAA/B;AADH,OAAP;AAKD,KAdkB;;AAAA,UAgBnBC,OAhBmB,GAgBT,UAACC,KAAD,EAAQC,MAAR,EAAmB;AAC3B,UAAIC,WAAW,EAAf;AACA,UAAGF,KAAH,EACEE,SAAS,OAAT,IAAoBF,KAApB;AACF,UAAGC,MAAH,EACEC,SAAS,QAAT,IAAqBD,MAArB;AACF,UAAIE,QAAQC,OAAOC,MAAP,CAAc,EAAd,EAAkB,MAAKC,KAAL,CAAWH,KAA7B,EAAoCD,QAApC,CAAZ;AACA,YAAKK,QAAL,CAAc;AACZJ;AADY,OAAd;AAGD,KA1BkB;;AAEjB,UAAKL,cAAL,GAAsB,8BAAc,MAAKL,KAAL,CAAWe,eAAzB,CAAtB;AACA,UAAKF,KAAL,GAAa;AACXH,aAAOC,OAAOC,MAAP,CAAc,EAAd,EAAkBhB,YAAlB,EAAgC,MAAKI,KAAL,CAAWU,KAAX,IAAoB,EAApD;AADI,KAAb;AAHiB;AAMlB;;;;6BAsBQ;AACP,aACE;AAAA;AAAA;AACE,iBAAO,KAAKG,KAAL,CAAWH,KADpB;AAEE,qBAAU;AAFZ;AAIE;AACE,qBAAU,0CADZ;AAEE,mCAAyB,KAAKT,cAAL;AAF3B;AAJF,OADF;AAWD;;;;;;AAGHF,aAAaiB,SAAb,GAAyB;AACvBb,SAAO,iBAAUc,MADM;AAEvBP,SAAO,iBAAUQ,MAFM;AAGvBH,mBAAiB,iBAAUG;AAHJ,CAAzB;;kBAMenB,Y","file":"anote_preview.js","sourcesContent":["import React, {\n  Component,\n  PropTypes\n} from 'react';\nconst marked = require('marked');\nimport renderFactory from '../../render_factory'\n\nconst defaultStyle = {\n  backgroundColor: '#fff',\n  overflowY: 'scroll'\n}\n\nclass ANotePreview extends Component {\n  constructor(props) {\n    super(props);\n    this.markedRenderer = renderFactory(this.props.rendererOptions);\n    this.state = {\n      style: Object.assign({}, defaultStyle, this.props.style || {})\n    }\n  }\n\n  renderMarkdown = () => {\n    return {\n      __html: marked(this.props.value || '', {\n        renderer: this.markedRenderer\n      })\n    }\n  }\n\n  setSize = (width, height) => {\n    let newStyle = {};\n    if(width)\n      newStyle['width'] = width;\n    if(height)\n      newStyle['height'] = height;\n    let style = Object.assign({}, this.state.style, newStyle);\n    this.setState({\n      style\n    });\n  }\n\n  render() {\n    return (\n      <div\n        style={this.state.style}\n        className='anote-preview'\n      >\n        <div\n          className='markdown-body editormd-preview-container'\n          dangerouslySetInnerHTML={this.renderMarkdown()}\n        ></div>\n      </div>\n    );\n  }\n}\n\nANotePreview.propTypes = {\n  value: PropTypes.string,\n  style: PropTypes.object,\n  rendererOptions: PropTypes.object\n}\n\nexport default ANotePreview;\n"]}