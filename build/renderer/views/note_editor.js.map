{"version":3,"sources":["../../../src/renderer/views/note_editor.js"],"names":["FILES_PATH","clipboard","require","fs","toMarkdown","sanitizeHtml","pastImage","cm","image","readImage","isEmpty","text","readText","toPNG","then","key","replaceSelection","length","pastHtml","ele","console","log","htmlText","readHTML","test","cleanText","allowedTags","selfClosing","allowedAttributes","tmpContent","converters","filter","replacement","content","node","src","regex","replace","showSpinner","hideSpinner","pastText","NoteEditor","props","setState","keyMap","that","execCommand","setValue","value","editor","jQuery","findDOMNode","refs","textArea","val","clearHistory","state","$imageInput","$","imageInput","editormd","autoFocus","path","onchange","watch","toolbarIcons","toolbarIconsClass","insertImage","toolbarHandlers","icon","cursor","selection","trigger","onChange","onload","change","event","files","target","hashKey","name","addKeyMap","setToolbarAutoFixed","defaultValue","display"],"mappings":"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","file":"note_editor.js","sourcesContent":["// pandao markdown editor\n// now not used\nimport path from 'path';\nimport co from 'co';\nimport React, {\n    Component\n} from 'react';\nimport ReactDom from 'react-dom';\nimport {\n    debounce,\n    placeImageToLocalAsyn,\n    downloadAsyn\n} from '../../util';\nimport {\n    copyFile,\n    getFileHash,\n    hash2Key,\n    buffer2File\n} from '../../util';\nimport constants from '../../constants';\nlet {\n    FILES_PATH\n} = constants;\nimport Spinner from './spinner'\n\nconst clipboard = require('electron').clipboard;\nconst fs = require('fs');\nconst toMarkdown = require('to-markdown');\nconst sanitizeHtml = require('sanitize-html');\n\n// for past image\nfunction pastImage(cm) {\n  let image = clipboard.readImage();\n  if(image && !image.isEmpty()){\n    let text = clipboard.readText();\n    buffer2File(image.toPNG()).then(function(key){\n      cm.replaceSelection(\"![\" + (text.length == 0 ? 'past-image' : text) + \"](\" + key + \")\");\n    });\n    return true;\n  }\n  return false;\n}\n\n// for past html(html2markdown)\nfunction pastHtml(cm, ele) {\n  console.log('pastHtml');\n  let htmlText = clipboard.readHTML();\n  console.log(htmlText);\n  //这里electron的坑不小，它也判断不太好是html还是text\n  if(!/<[a-z][\\s\\S]*>/i.test(htmlText))\n    return false;\n  let cleanText = sanitizeHtml(htmlText, {\n    allowedTags: [ 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'blockquote', 'p', 'a', 'ul', 'ol',\n  'nl', 'li', 'b', 'i', 'strong', 'em', 'strike', 'code', 'hr', 'br',\n  'table', 'thead', 'tbody', 'tr', 'th', 'td', 'pre', 'img'],\n    selfClosing: ['br', 'hr', 'base', 'img'],\n    allowedAttributes: {\n      'a': [ 'href' ],\n      'img': [ 'src' ]\n    }\n  });\n  if(htmlText && htmlText.length > 0){\n    let tmpContent = toMarkdown(cleanText, {\n      converters: [\n        {\n          filter: 'code',\n          replacement: function(content) {\n            return '`' + content + '`';\n          }\n        },\n        {\n          filter: 'img',\n          replacement: function(content, node) {\n            // need add back worker\n            return \"![\" + 'web-image' + \"](\" + node.src + \")\"\n          }\n        }\n      ]\n    });\n    let regex = /(<([^>]+)>)/ig;\n    tmpContent = tmpContent.replace(regex, '');\n    ele.showSpinner();\n    placeImageToLocalAsyn(tmpContent).then(function(content) {\n      ele.hideSpinner();\n      cm.replaceSelection(content);\n    }, function () {\n      ele.hideSpinner();\n    });\n    // cm.replaceSelection(tmpContent);\n    return true;\n  }\n  return false\n}\n\n// past text\nfunction pastText(cm) {\n  let text = clipboard.readText();\n  console.log('pastText\\n');\n  console.log(text);\n  if(text && text.length > 0){\n    cm.replaceSelection(text);\n  }\n}\n\nclass NoteEditor extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      showSpinner: false\n    }\n  }\n\n  showSpinner = () => {\n    this.setState({\n      showSpinner: true\n    });\n  }\n\n  hideSpinner = () => {\n    this.setState({\n      showSpinner: false\n    });\n  }\n\n  // default keymap like emacs keybinding\n  // todo: add custom keymap\n  keyMap = () => {\n    var that = this;\n    var keyMap = {\n      \"Ctrl-P\": function(cm) {\n        cm.execCommand(\"goLineUp\");\n      },\n      \"Ctrl-N\": function(cm) {\n        cm.execCommand(\"goLineDown\");\n      },\n      \"Ctrl-A\": function(cm) {\n        cm.execCommand(\"goLineStart\");\n      },\n      \"Ctrl-E\": function(cm) {\n        cm.execCommand(\"goLineEnd\");\n      },\n      \"Ctrl-K\": function(cm) {\n        cm.execCommand(\"killLine\");\n      },\n      \"Ctrl-F\": function(cm) {\n        cm.execCommand(\"goColumnRight\");\n      },\n      \"Ctrl-B\": function(cm) {\n        cm.execCommand(\"goColumnLeft\");\n      },\n      \"Alt-F\": function(cm) {\n        cm.execCommand(\"goWordRight\");\n      },\n      \"Alt-B\": function(cm){\n        cm.execCommand(\"goWordLeft\");\n      },\n      \"Cmd-V\": function(cm){\n        if(pastImage(cm)){\n          return;\n        }\n        if(pastHtml(cm, that)){\n          return;\n        }\n        pastText(cm);\n      }\n    };\n    return keyMap;\n  }\n\n\n  componentDidMount() {\n    var that = this,\n      $imageInput = $(ReactDom.findDOMNode(that.refs.imageInput));\n    var editor = editormd(\"editormd\", {\n        autoFocus: false,\n        path : \"./lib/\",\n        // 这个方法只有preview和watch的时候才调用\n        onchange: function() {\n        },\n        watch: false,\n        toolbarIcons: [\"undo\", \"redo\", \"|\", \"bold\", \"italic\", \"quote\", \"|\", \"h1\", \"h2\", \"h3\", \"|\", \"list-ul\", \"list-ol\", \"hr\", \"|\", \"link\", \"reference-link\", \"insertImage\", \"code\", \"preformatted-text\", \"code-block\", \"table\", \"datetime\", \"html-entities\", \"pagebreak\", \"|\", \"goto-line\", \"watch\", \"preview\", \"fullscreen\", \"clear\", \"search\"],\n        toolbarIconsClass : {\n          insertImage: \"fa-picture-o\"  // 指定一个FontAawsome的图标类\n        },\n        toolbarHandlers: {\n          insertImage: function(cm, icon, cursor, selection) {\n            $imageInput.trigger('click');\n          }\n        },\n        // a hack hook\n        onChange: function() {\n          if(that.props.onChange && that.refs.textArea){\n            that.props.onChange((that.refs.textArea && that.refs.textArea.value) || '');\n          }\n        },\n        onload: function() {\n          $imageInput.change(function(event){\n            let files = event.target.files;\n            if(files.length == 0)\n              return;\n            co(function * () {\n              let path = files[0].path;\n              let hashKey = yield getFileHash(path);\n              let key = hash2Key(hashKey);\n              yield copyFile(path, `${FILES_PATH}/${key}`);\n              editor.cm.replaceSelection(\"![\" + files[0].name + \"](\" + key + \")\");\n            });\n          });\n\n          this.addKeyMap(that.keyMap());\n        }\n    });\n    editor.setToolbarAutoFixed(true);\n    this.editor = editor;\n  }\n\n  setValue = (value) => {\n    if(this.editor.cm)\n      return this.editor.cm.setValue(value);\n    jQuery(ReactDom.findDOMNode(this.refs.textArea)).val(value);\n  }\n\n  clearHistory = () => {\n    if(this.editor.cm)\n      this.editor.cm.clearHistory();\n  }\n\n  render () {\n    return (\n      <div id='editormd'>\n        <textarea\n          defaultValue={this.props.defaultValue}\n          ref='textArea'\n        />\n        <input type='file' style={{display: 'none'}} ref='imageInput' accept='image/*' />\n        <Spinner show={this.state.showSpinner}/>\n      </div>\n    );\n  }\n}\n\nexport default NoteEditor;\n"]}