{"version":3,"sources":["../src/render_factory.js"],"names":["marked","require","FILES_PATH","defaultOptions","image","href","title","text","console","log","pp","test","link","out","renderFactory","options","markedRenderer","Renderer","Object","assign","propKeys","keys","forEach","key"],"mappings":";;;;;;AACA;;;;;;AADA,IAAMA,SAASC,QAAQ,QAAR,CAAf;IAEMC,U,uBAAAA,U;;;AAEN,IAAMC,iBAAiB;AACrBC,SAAO,eAASC,IAAT,EAAeC,KAAf,EAAsBC,IAAtB,EAA4B;AACjCC,YAAQC,GAAR,CAAY,cAAZ;AACA,QAAIC,KAAK,cAAT;AACA,QAAG,CAACA,GAAGC,IAAH,CAAQN,IAAR,CAAJ,EAAkB;AAChB,aAAO,QAAQ,YAAR,GAAuBH,UAAvB,GAAoC,GAApC,GAA0CG,IAA1C,GAAiD,KAAjD,GAAyD,MAAhE;AACD,KAFD,MAEK;AACH,aAAO,QAAQ,YAAR,GAAuBA,IAAvB,GAA8B,KAA9B,GAAsC,MAA7C;AACD;AACF,GAToB;AAUrBO,QAAM,cAASP,IAAT,EAAeC,KAAf,EAAsBC,IAAtB,EAA4B;AAChC,QAAIM,MAAM,gCAAgCR,IAAhC,GAAuC,IAAjD;AACA,QAAIC,KAAJ,EAAW;AACPO,aAAO,cAAcP,KAAd,GAAsB,IAA7B;AACH;AACDO,WAAO,MAAMN,IAAN,GAAa,MAApB;AACA,WAAOM,GAAP;AACD;AAjBoB,CAAvB;;AAoBA,SAASC,aAAT,GAAmC;AAAA,MAAZC,OAAY,uEAAJ,EAAI;;AACjC,MAAIC,iBAAiB,IAAIhB,OAAOiB,QAAX,EAArB;AACAF,YAAUG,OAAOC,MAAP,CAAc,EAAd,EAAkBhB,cAAlB,EAAkCY,OAAlC,CAAV;AACA,MAAIK,WAAWF,OAAOG,IAAP,CAAYN,OAAZ,CAAf;AACAK,WAASE,OAAT,CAAiB,UAACC,GAAD,EAAS;AACxBP,mBAAeO,GAAf,IAAsBR,QAAQQ,GAAR,CAAtB;AACD,GAFD;AAGA,SAAOP,cAAP;AACD;;kBAEcF,a","file":"render_factory.js","sourcesContent":["const marked = require('marked');\nimport constants from './constants';\nlet { FILES_PATH } = constants;\n\nconst defaultOptions = {\n  image: function(href, title, text) {\n    console.log('render image');\n    var pp = /[http|https]/;\n    if(!pp.test(href)){\n      return \"<p>\" + \"<img src='\" + FILES_PATH + '/' + href + \"'/>\" + \"</p>\";\n    }else{\n      return \"<p>\" + \"<img src='\" + href + \"'/>\" + \"</p>\";\n    }\n  },\n  link: function(href, title, text) {\n    let out = \"<a class='external' href=\\\"\" + href + \"\\\"\";\n    if (title) {\n        out += \" title=\\\"\" + title + \"\\\"\";\n    }\n    out += \">\" + text + \"</a>\";\n    return out;\n  }\n}\n\nfunction renderFactory(options={}) {\n  let markedRenderer = new marked.Renderer();\n  options = Object.assign({}, defaultOptions, options);\n  let propKeys = Object.keys(options);\n  propKeys.forEach((key) => {\n    markedRenderer[key] = options[key];\n  });\n  return markedRenderer;\n}\n\nexport default renderFactory;\n"]}